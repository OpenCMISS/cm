######################################
# This configuration is specified for 
# OpenCMISS build on the NESI Pan Cluster

#######################################
##           Slaves
########################################
from buildbot.buildslave import BuildSlave

c['slaves'].append(BuildSlave("nesi_cluster", "buildbot"))

#######################################
##           Factories
########################################
from buildbot.process.factory import BuildFactory
from buildbot.steps.shell import ShellCommand, SetProperty
from buildbot.steps.source import Git, SVN
from opencmiss.steps.shell import ShellCommandWithHtmlLog
from buildbot.steps.transfer import DirectoryUpload
from buildbot.steps.trigger import Trigger
from buildbot.process.properties import WithProperties, Property
from buildbot.steps.slave import SetPropertiesFromEnv

## TODO will use group directory later on
opencmiss_nesi_root = "/home/tyu011/opencmiss/OpenCMISS"
opencmissextras_nesi_root = "/home/tyu011/opencmiss/OpenCMISSExtras"

###############OpenCMISS#######################
f_x86_64_nesi_OpenCMISS=BuildFactory()

### checkout and install nose plugins
f_x86_64_nesi_OpenCMISS.addStep(Git(repourl=opencmiss_repository+"/cm",workdir=opencmiss_nesi_root+"/cm"))
f_x86_64_nesi_OpenCMISS.addStep(Git(repourl=opencmiss_repository+"/examples",workdir=opencmiss_nesi_root+"/examples"))
f_x86_64_nesi_OpenCMISS.addStep(Git(repourl=opencmiss_repository+"/cellml",workdir=opencmiss_nesi_root+"/cellml"))

### Build and test OpenCMISS 
f_x86_64_nesi_OpenCMISS.addStep(ShellCommand(name="Build CellML",command=["make"],workdir=opencmiss_nesi_root+"/cellml"))
f_x86_64_nesi_OpenCMISS.addStep(ShellCommand(name="Build OpenCMISS Library",command=["make"],workdir=opencmiss_nesi_root+"/cm"))
f_x86_64_nesi_OpenCMISS.addStep(ShellCommandWithHtmlLog(name="Build OpenCMISS Examples and Submit Jobs",command=["python","run_tests.py","html"],env={"MACHINE":"nesi"},workdir=opencmiss_nesi_root+"/examples/scripts"))

### Upload the logs
f_x86_64_nesi_OpenCMISS.addStep(DirectoryUpload(slavesrc="build/logs",workdir=opencmiss_nesi_root,masterdest=WithProperties('public_html/logs_nesi')))

#######################################
##           Builders
########################################
c['builders'].append(
                {'name':'nesi_cluster',
                 'slavename':'nesi_cluster',
                 'builddir':'nesi_cluster',
                 'factory':f_x86_64_nesi_OpenCMISS})


#######################################
##           Schedulers
########################################

from buildbot.schedulers.timed import Nightly
from buildbot.schedulers.triggerable import Triggerable
from buildbot.schedulers.forcesched import ForceScheduler,StringParameter,FixedParameter,ChoiceStringParameter

opencmiss_nesi = Nightly(name="nesi_nightly",
                           builderNames=['nesi_cluster'],
                           hour=14, minute=37,branch=None)

c['schedulers'].append(opencmiss_nesi)

###############################################
##           Status
################################################

from buildbot.status.mail import MailNotifier


mn = MailNotifier(fromaddr="noreply@bioeng.auckland.ac.nz",
                  builders=['nesi_cluster'],
                  relayhost="mailhost.auckland.ac.nz",
                  sendToInterestedUsers=False,
                  extraRecipients=['opencmiss-automated1@lists.sourceforge.net'], mode="failing")

c['status'].append(mn)
